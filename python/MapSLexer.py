# Generated from MapS.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,78,576,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,1,
        0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,
        3,1,3,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,
        6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,
        9,1,9,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,
        1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,
        1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,
        1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,
        1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,
        1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,
        1,20,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,23,
        1,23,1,23,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,
        1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,30,
        1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,
        1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,
        1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,
        1,40,1,40,1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,44,1,45,1,45,
        1,45,1,46,1,46,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,49,1,49,1,49,
        1,49,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,
        1,52,1,52,1,53,1,53,1,53,1,54,1,54,1,54,1,55,1,55,1,55,1,56,1,56,
        1,57,1,57,1,58,1,58,1,58,1,58,1,58,1,58,1,59,1,59,1,59,1,59,1,60,
        1,60,1,60,1,61,1,61,1,61,1,61,1,62,4,62,435,8,62,11,62,12,62,436,
        1,63,4,63,440,8,63,11,63,12,63,441,1,63,1,63,4,63,446,8,63,11,63,
        12,63,447,3,63,450,8,63,1,64,1,64,5,64,454,8,64,10,64,12,64,457,
        9,64,1,64,1,64,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,3,65,
        470,8,65,1,66,1,66,1,66,1,66,1,66,1,67,1,67,1,67,1,67,1,67,1,67,
        1,68,1,68,1,68,1,68,1,68,1,69,1,69,1,69,1,69,1,69,1,69,1,70,1,70,
        1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,71,1,71,1,71,1,71,
        1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,72,1,72,1,72,1,72,1,72,1,72,
        1,72,1,72,1,72,1,72,1,72,1,73,1,73,1,73,1,73,1,73,1,73,1,73,1,73,
        1,73,1,73,1,73,1,74,1,74,5,74,540,8,74,10,74,12,74,543,9,74,1,75,
        4,75,546,8,75,11,75,12,75,547,1,75,1,75,1,76,1,76,1,76,1,76,5,76,
        556,8,76,10,76,12,76,559,9,76,1,76,1,76,1,77,1,77,1,77,1,77,5,77,
        567,8,77,10,77,12,77,570,9,77,1,77,1,77,1,77,1,77,1,77,1,568,0,78,
        1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,
        27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,
        49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,
        71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,
        93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,
        113,57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,131,
        66,133,67,135,68,137,69,139,70,141,71,143,72,145,73,147,74,149,75,
        151,76,153,77,155,78,1,0,6,1,0,48,57,1,0,34,34,3,0,65,90,95,95,97,
        122,4,0,48,57,65,90,95,95,97,122,3,0,9,10,13,13,32,32,2,0,10,10,
        13,13,585,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,
        0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,
        0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,
        0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,
        0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,
        0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,
        0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,
        0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,
        0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,
        0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,
        0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,
        109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,
        0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,
        1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,
        0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,
        0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,
        155,1,0,0,0,1,157,1,0,0,0,3,159,1,0,0,0,5,166,1,0,0,0,7,168,1,0,
        0,0,9,175,1,0,0,0,11,179,1,0,0,0,13,186,1,0,0,0,15,191,1,0,0,0,17,
        198,1,0,0,0,19,201,1,0,0,0,21,207,1,0,0,0,23,209,1,0,0,0,25,215,
        1,0,0,0,27,222,1,0,0,0,29,227,1,0,0,0,31,232,1,0,0,0,33,234,1,0,
        0,0,35,247,1,0,0,0,37,255,1,0,0,0,39,263,1,0,0,0,41,275,1,0,0,0,
        43,285,1,0,0,0,45,290,1,0,0,0,47,296,1,0,0,0,49,299,1,0,0,0,51,303,
        1,0,0,0,53,312,1,0,0,0,55,314,1,0,0,0,57,316,1,0,0,0,59,318,1,0,
        0,0,61,320,1,0,0,0,63,323,1,0,0,0,65,326,1,0,0,0,67,330,1,0,0,0,
        69,338,1,0,0,0,71,345,1,0,0,0,73,350,1,0,0,0,75,356,1,0,0,0,77,358,
        1,0,0,0,79,360,1,0,0,0,81,362,1,0,0,0,83,364,1,0,0,0,85,366,1,0,
        0,0,87,368,1,0,0,0,89,370,1,0,0,0,91,373,1,0,0,0,93,376,1,0,0,0,
        95,378,1,0,0,0,97,381,1,0,0,0,99,385,1,0,0,0,101,389,1,0,0,0,103,
        392,1,0,0,0,105,396,1,0,0,0,107,403,1,0,0,0,109,406,1,0,0,0,111,
        409,1,0,0,0,113,412,1,0,0,0,115,414,1,0,0,0,117,416,1,0,0,0,119,
        422,1,0,0,0,121,426,1,0,0,0,123,429,1,0,0,0,125,434,1,0,0,0,127,
        439,1,0,0,0,129,451,1,0,0,0,131,469,1,0,0,0,133,471,1,0,0,0,135,
        476,1,0,0,0,137,482,1,0,0,0,139,487,1,0,0,0,141,493,1,0,0,0,143,
        504,1,0,0,0,145,515,1,0,0,0,147,526,1,0,0,0,149,537,1,0,0,0,151,
        545,1,0,0,0,153,551,1,0,0,0,155,562,1,0,0,0,157,158,5,59,0,0,158,
        2,1,0,0,0,159,160,5,112,0,0,160,161,5,114,0,0,161,162,5,105,0,0,
        162,163,5,110,0,0,163,164,5,116,0,0,164,165,5,40,0,0,165,4,1,0,0,
        0,166,167,5,41,0,0,167,6,1,0,0,0,168,169,5,114,0,0,169,170,5,101,
        0,0,170,171,5,116,0,0,171,172,5,117,0,0,172,173,5,114,0,0,173,174,
        5,110,0,0,174,8,1,0,0,0,175,176,5,105,0,0,176,177,5,110,0,0,177,
        178,5,116,0,0,178,10,1,0,0,0,179,180,5,100,0,0,180,181,5,111,0,0,
        181,182,5,117,0,0,182,183,5,98,0,0,183,184,5,108,0,0,184,185,5,101,
        0,0,185,12,1,0,0,0,186,187,5,98,0,0,187,188,5,111,0,0,188,189,5,
        111,0,0,189,190,5,108,0,0,190,14,1,0,0,0,191,192,5,115,0,0,192,193,
        5,116,0,0,193,194,5,114,0,0,194,195,5,105,0,0,195,196,5,110,0,0,
        196,197,5,103,0,0,197,16,1,0,0,0,198,199,5,105,0,0,199,200,5,115,
        0,0,200,18,1,0,0,0,201,202,5,76,0,0,202,203,5,105,0,0,203,204,5,
        115,0,0,204,205,5,116,0,0,205,206,5,60,0,0,206,20,1,0,0,0,207,208,
        5,62,0,0,208,22,1,0,0,0,209,210,5,80,0,0,210,211,5,111,0,0,211,212,
        5,105,0,0,212,213,5,110,0,0,213,214,5,116,0,0,214,24,1,0,0,0,215,
        216,5,72,0,0,216,217,5,101,0,0,217,218,5,105,0,0,218,219,5,103,0,
        0,219,220,5,104,0,0,220,221,5,116,0,0,221,26,1,0,0,0,222,223,5,76,
        0,0,223,224,5,97,0,0,224,225,5,110,0,0,225,226,5,100,0,0,226,28,
        1,0,0,0,227,228,5,119,0,0,228,229,5,105,0,0,229,230,5,116,0,0,230,
        231,5,104,0,0,231,30,1,0,0,0,232,233,5,44,0,0,233,32,1,0,0,0,234,
        235,5,112,0,0,235,236,5,101,0,0,236,237,5,114,0,0,237,238,5,105,
        0,0,238,239,5,109,0,0,239,240,5,101,0,0,240,241,5,116,0,0,241,242,
        5,101,0,0,242,243,5,114,0,0,243,244,5,32,0,0,244,245,5,105,0,0,245,
        246,5,115,0,0,246,34,1,0,0,0,247,248,5,67,0,0,248,249,5,105,0,0,
        249,250,5,114,0,0,250,251,5,99,0,0,251,252,5,108,0,0,252,253,5,101,
        0,0,253,254,5,40,0,0,254,36,1,0,0,0,255,256,5,83,0,0,256,257,5,113,
        0,0,257,258,5,117,0,0,258,259,5,97,0,0,259,260,5,114,0,0,260,261,
        5,101,0,0,261,262,5,40,0,0,262,38,1,0,0,0,263,264,5,82,0,0,264,265,
        5,97,0,0,265,266,5,110,0,0,266,267,5,100,0,0,267,268,5,111,0,0,268,
        269,5,109,0,0,269,270,5,76,0,0,270,271,5,97,0,0,271,272,5,110,0,
        0,272,273,5,100,0,0,273,274,5,40,0,0,274,40,1,0,0,0,275,276,5,104,
        0,0,276,277,5,101,0,0,277,278,5,105,0,0,278,279,5,103,0,0,279,280,
        5,104,0,0,280,281,5,116,0,0,281,282,5,32,0,0,282,283,5,105,0,0,283,
        284,5,115,0,0,284,42,1,0,0,0,285,286,5,76,0,0,286,287,5,97,0,0,287,
        288,5,107,0,0,288,289,5,101,0,0,289,44,1,0,0,0,290,291,5,82,0,0,
        291,292,5,105,0,0,292,293,5,118,0,0,293,294,5,101,0,0,294,295,5,
        114,0,0,295,46,1,0,0,0,296,297,5,116,0,0,297,298,5,111,0,0,298,48,
        1,0,0,0,299,300,5,102,0,0,300,301,5,111,0,0,301,302,5,114,0,0,302,
        50,1,0,0,0,303,304,5,102,0,0,304,305,5,117,0,0,305,306,5,110,0,0,
        306,307,5,99,0,0,307,308,5,116,0,0,308,309,5,105,0,0,309,310,5,111,
        0,0,310,311,5,110,0,0,311,52,1,0,0,0,312,313,5,40,0,0,313,54,1,0,
        0,0,314,315,5,58,0,0,315,56,1,0,0,0,316,317,5,123,0,0,317,58,1,0,
        0,0,318,319,5,125,0,0,319,60,1,0,0,0,320,321,5,105,0,0,321,322,5,
        102,0,0,322,62,1,0,0,0,323,324,5,100,0,0,324,325,5,111,0,0,325,64,
        1,0,0,0,326,327,5,101,0,0,327,328,5,105,0,0,328,329,5,102,0,0,329,
        66,1,0,0,0,330,331,5,101,0,0,331,332,5,108,0,0,332,333,5,115,0,0,
        333,334,5,101,0,0,334,335,5,32,0,0,335,336,5,100,0,0,336,337,5,111,
        0,0,337,68,1,0,0,0,338,339,5,114,0,0,339,340,5,101,0,0,340,341,5,
        112,0,0,341,342,5,101,0,0,342,343,5,97,0,0,343,344,5,116,0,0,344,
        70,1,0,0,0,345,346,5,102,0,0,346,347,5,114,0,0,347,348,5,111,0,0,
        348,349,5,109,0,0,349,72,1,0,0,0,350,351,5,119,0,0,351,352,5,104,
        0,0,352,353,5,105,0,0,353,354,5,108,0,0,354,355,5,101,0,0,355,74,
        1,0,0,0,356,357,5,45,0,0,357,76,1,0,0,0,358,359,5,94,0,0,359,78,
        1,0,0,0,360,361,5,63,0,0,361,80,1,0,0,0,362,363,5,42,0,0,363,82,
        1,0,0,0,364,365,5,47,0,0,365,84,1,0,0,0,366,367,5,43,0,0,367,86,
        1,0,0,0,368,369,5,60,0,0,369,88,1,0,0,0,370,371,5,62,0,0,371,372,
        5,61,0,0,372,90,1,0,0,0,373,374,5,60,0,0,374,375,5,61,0,0,375,92,
        1,0,0,0,376,377,5,61,0,0,377,94,1,0,0,0,378,379,5,33,0,0,379,380,
        5,61,0,0,380,96,1,0,0,0,381,382,5,115,0,0,382,383,5,105,0,0,383,
        384,5,110,0,0,384,98,1,0,0,0,385,386,5,99,0,0,386,387,5,111,0,0,
        387,388,5,115,0,0,388,100,1,0,0,0,389,390,5,116,0,0,390,391,5,103,
        0,0,391,102,1,0,0,0,392,393,5,99,0,0,393,394,5,116,0,0,394,395,5,
        103,0,0,395,104,1,0,0,0,396,397,5,112,0,0,397,398,5,97,0,0,398,399,
        5,114,0,0,399,400,5,101,0,0,400,401,5,110,0,0,401,402,5,116,0,0,
        402,106,1,0,0,0,403,404,5,58,0,0,404,405,5,58,0,0,405,108,1,0,0,
        0,406,407,5,46,0,0,407,408,5,120,0,0,408,110,1,0,0,0,409,410,5,46,
        0,0,410,411,5,121,0,0,411,112,1,0,0,0,412,413,5,91,0,0,413,114,1,
        0,0,0,414,415,5,93,0,0,415,116,1,0,0,0,416,417,5,46,0,0,417,418,
        5,97,0,0,418,419,5,100,0,0,419,420,5,100,0,0,420,421,5,40,0,0,421,
        118,1,0,0,0,422,423,5,97,0,0,423,424,5,110,0,0,424,425,5,100,0,0,
        425,120,1,0,0,0,426,427,5,111,0,0,427,428,5,114,0,0,428,122,1,0,
        0,0,429,430,5,110,0,0,430,431,5,111,0,0,431,432,5,116,0,0,432,124,
        1,0,0,0,433,435,7,0,0,0,434,433,1,0,0,0,435,436,1,0,0,0,436,434,
        1,0,0,0,436,437,1,0,0,0,437,126,1,0,0,0,438,440,7,0,0,0,439,438,
        1,0,0,0,440,441,1,0,0,0,441,439,1,0,0,0,441,442,1,0,0,0,442,449,
        1,0,0,0,443,445,5,46,0,0,444,446,7,0,0,0,445,444,1,0,0,0,446,447,
        1,0,0,0,447,445,1,0,0,0,447,448,1,0,0,0,448,450,1,0,0,0,449,443,
        1,0,0,0,449,450,1,0,0,0,450,128,1,0,0,0,451,455,5,34,0,0,452,454,
        8,1,0,0,453,452,1,0,0,0,454,457,1,0,0,0,455,453,1,0,0,0,455,456,
        1,0,0,0,456,458,1,0,0,0,457,455,1,0,0,0,458,459,5,34,0,0,459,130,
        1,0,0,0,460,461,5,116,0,0,461,462,5,114,0,0,462,463,5,117,0,0,463,
        470,5,101,0,0,464,465,5,102,0,0,465,466,5,97,0,0,466,467,5,108,0,
        0,467,468,5,115,0,0,468,470,5,101,0,0,469,460,1,0,0,0,469,464,1,
        0,0,0,470,132,1,0,0,0,471,472,5,101,0,0,472,473,5,97,0,0,473,474,
        5,115,0,0,474,475,5,116,0,0,475,134,1,0,0,0,476,477,5,110,0,0,477,
        478,5,111,0,0,478,479,5,114,0,0,479,480,5,116,0,0,480,481,5,104,
        0,0,481,136,1,0,0,0,482,483,5,119,0,0,483,484,5,101,0,0,484,485,
        5,115,0,0,485,486,5,116,0,0,486,138,1,0,0,0,487,488,5,115,0,0,488,
        489,5,111,0,0,489,490,5,117,0,0,490,491,5,116,0,0,491,492,5,104,
        0,0,492,140,1,0,0,0,493,494,5,115,0,0,494,495,5,111,0,0,495,496,
        5,117,0,0,496,497,5,116,0,0,497,498,5,104,0,0,498,499,5,45,0,0,499,
        500,5,101,0,0,500,501,5,97,0,0,501,502,5,115,0,0,502,503,5,116,0,
        0,503,142,1,0,0,0,504,505,5,115,0,0,505,506,5,111,0,0,506,507,5,
        117,0,0,507,508,5,116,0,0,508,509,5,104,0,0,509,510,5,45,0,0,510,
        511,5,119,0,0,511,512,5,101,0,0,512,513,5,115,0,0,513,514,5,116,
        0,0,514,144,1,0,0,0,515,516,5,110,0,0,516,517,5,111,0,0,517,518,
        5,114,0,0,518,519,5,116,0,0,519,520,5,104,0,0,520,521,5,45,0,0,521,
        522,5,101,0,0,522,523,5,97,0,0,523,524,5,115,0,0,524,525,5,116,0,
        0,525,146,1,0,0,0,526,527,5,110,0,0,527,528,5,111,0,0,528,529,5,
        114,0,0,529,530,5,116,0,0,530,531,5,104,0,0,531,532,5,45,0,0,532,
        533,5,119,0,0,533,534,5,101,0,0,534,535,5,115,0,0,535,536,5,116,
        0,0,536,148,1,0,0,0,537,541,7,2,0,0,538,540,7,3,0,0,539,538,1,0,
        0,0,540,543,1,0,0,0,541,539,1,0,0,0,541,542,1,0,0,0,542,150,1,0,
        0,0,543,541,1,0,0,0,544,546,7,4,0,0,545,544,1,0,0,0,546,547,1,0,
        0,0,547,545,1,0,0,0,547,548,1,0,0,0,548,549,1,0,0,0,549,550,6,75,
        0,0,550,152,1,0,0,0,551,552,5,47,0,0,552,553,5,47,0,0,553,557,1,
        0,0,0,554,556,8,5,0,0,555,554,1,0,0,0,556,559,1,0,0,0,557,555,1,
        0,0,0,557,558,1,0,0,0,558,560,1,0,0,0,559,557,1,0,0,0,560,561,6,
        76,0,0,561,154,1,0,0,0,562,563,5,47,0,0,563,564,5,42,0,0,564,568,
        1,0,0,0,565,567,9,0,0,0,566,565,1,0,0,0,567,570,1,0,0,0,568,569,
        1,0,0,0,568,566,1,0,0,0,569,571,1,0,0,0,570,568,1,0,0,0,571,572,
        5,42,0,0,572,573,5,47,0,0,573,574,1,0,0,0,574,575,6,77,0,0,575,156,
        1,0,0,0,11,0,436,441,447,449,455,469,541,547,557,568,1,6,0,0
    ]

class MapSLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    T__51 = 52
    T__52 = 53
    T__53 = 54
    T__54 = 55
    T__55 = 56
    T__56 = 57
    T__57 = 58
    T__58 = 59
    AND = 60
    OR = 61
    NOT = 62
    INT = 63
    DOUBLE = 64
    STRING = 65
    BOOLEAN = 66
    EAST = 67
    NORTH = 68
    WEST = 69
    SOUTH = 70
    SOUTH_EAST = 71
    SOUTH_WEST = 72
    NORTH_EAST = 73
    NORTH_WEST = 74
    IDENTIFIER = 75
    WHITESPACE = 76
    LINE_COMMENT = 77
    COMMENT = 78

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'print('", "')'", "'return'", "'int'", "'double'", "'bool'", 
            "'string'", "'is'", "'List<'", "'>'", "'Point'", "'Height'", 
            "'Land'", "'with'", "','", "'perimeter is'", "'Circle('", "'Square('", 
            "'RandomLand('", "'height is'", "'Lake'", "'River'", "'to'", 
            "'for'", "'function'", "'('", "':'", "'{'", "'}'", "'if'", "'do'", 
            "'eif'", "'else do'", "'repeat'", "'from'", "'while'", "'-'", 
            "'^'", "'?'", "'*'", "'/'", "'+'", "'<'", "'>='", "'<='", "'='", 
            "'!='", "'sin'", "'cos'", "'tg'", "'ctg'", "'parent'", "'::'", 
            "'.x'", "'.y'", "'['", "']'", "'.add('", "'and'", "'or'", "'not'", 
            "'east'", "'north'", "'west'", "'south'", "'south-east'", "'south-west'", 
            "'north-east'", "'north-west'" ]

    symbolicNames = [ "<INVALID>",
            "AND", "OR", "NOT", "INT", "DOUBLE", "STRING", "BOOLEAN", "EAST", 
            "NORTH", "WEST", "SOUTH", "SOUTH_EAST", "SOUTH_WEST", "NORTH_EAST", 
            "NORTH_WEST", "IDENTIFIER", "WHITESPACE", "LINE_COMMENT", "COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", 
                  "T__56", "T__57", "T__58", "AND", "OR", "NOT", "INT", 
                  "DOUBLE", "STRING", "BOOLEAN", "EAST", "NORTH", "WEST", 
                  "SOUTH", "SOUTH_EAST", "SOUTH_WEST", "NORTH_EAST", "NORTH_WEST", 
                  "IDENTIFIER", "WHITESPACE", "LINE_COMMENT", "COMMENT" ]

    grammarFileName = "MapS.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


