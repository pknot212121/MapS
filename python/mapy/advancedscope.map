print("--- Test 10: ---");

int base is 10;
int result is 0;

print(base);
print(result);

{
    int base is 2;
    result is 5 * parent::base + base;
    
    print(result);
    
    
    print(parent::base);
}

print(base);
print(result);

print("--- Test 11:---");

int stop_level is 2;

function dive(int current_level) {
    print(current_level);
    int stop_level is 99;
    if (current_level < parent::stop_level) do {
        dive(current_level + 1);
    } else do {
        print("KONIEC ZAGLEBIANIA SIE");
    }
    print(current_level);
}

dive(0);

print("--- Test 12:---");

int max_runs is 3;
int counter is 0;

while (counter < max_runs) do { //warunek sprawdza tylko rzeczy z wyÅ¼szym scopie
    counter is counter + 1;
    
    int max_runs is 1;
    print("COUNTER");
    print(counter);
    print("MAX_RUNS");
    print(max_runs);
    print("PARENT");
    print(parent::max_runs);
}

print(counter);

print("--- Test 13: ---");
string id is "GLOBAL";
function check_scopes() {
    string id is "FUNKCJA";
    print(id);
    print(parent::id);
    print(parent::parent::id);
    print(parent::parent::parent::id);
    print(parent::parent::parent::parent::id);
}
if (true) do {
    string id is "IF";
    int i is 0;
    while (i < 1) do {
        string id is "WHILE";
        repeat with j 1 {
            string id is "REPEAT";
            
            check_scopes();
        }
        i is i + 1;
    }
}